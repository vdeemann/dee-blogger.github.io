name: ULTIMATE BUILD - CLEAN CI EDITION

on:
  push: 
    branches: [main]
    paths: ['content/**', 'build.sh']
  workflow_dispatch:
  schedule: 
    - cron: '0 */6 * * *'  # Rebuild every 6 hours for maximum freshness

permissions: 
  contents: read
  pages: write
  id-token: write

concurrency: 
  group: ultimate-${{ github.run_id }}
  cancel-in-progress: true

env:
  SITE_TITLE: dee-blogger
  DEBIAN_FRONTEND: noninteractive
  BUILDKIT_PROGRESS: plain
  DOCKER_BUILDKIT: 1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: 
      name: github-pages 
      url: '${{ steps.deploy.outputs.page_url }}'
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 1
          show-progress: false
          clean: false
          filter: blob:none

      - name: Install GNU parallel
        run: sudo apt-get update && sudo apt-get install -y parallel

      - name: Build Site
        run: |
          set -e
          chmod +x build.sh
          ./build.sh
          mkdir -p public
      
      - name: Compress files (keep originals)
        run: |
          if [ -d public ]; then
            find public -type f \( -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.svg" \) -print0 | \
            parallel -0 -j+0 --will-cite 'gzip -9c {} > {}.gz'
          fi

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

      - name: Build Summary
        run: |
          TOTAL_SIZE=$(du -sb public 2>/dev/null | cut -f1 || echo 0)
          PAGE_COUNT=$(find public -name "*.html" 2>/dev/null | wc -l || echo 0)
          COMPRESSION_COUNT=$(find public -name "*.gz" 2>/dev/null | wc -l || echo 0)
          echo "📊 Total Size: $((TOTAL_SIZE/1024)) KB"
          echo "📄 Pages: $PAGE_COUNT"
          echo "🗜️ Compressed Files: $COMPRESSION_COUNT"
          if [ "$PAGE_COUNT" -gt 0 ]; then
            echo "⚡ Efficiency: $(echo "scale=2; $TOTAL_SIZE/1024/$PAGE_COUNT" | bc -l) KB/page"
          fi
          echo "🌐 ULTIMATE SITE: ${{ steps.deploy.outputs.page_url }}"
