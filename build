#!/bin/bash
set -e

rm -rf public
mkdir -p public/p

echo "Building ultra-minimal blog..."

# Generate individual post pages
i=1
for f in content/*.md; do
    [ -f "$f" ] || continue
    
    filename=$(basename "$f")
    date_part=$(echo "$filename" | cut -d- -f1-3)
    year=$(echo "$date_part" | cut -d- -f1)
    month=$(echo "$date_part" | cut -d- -f2)
    day=$(echo "$date_part" | cut -d- -f3)
    month=${month#0}
    day=${day#0}
    short_date="$month/$day/${year#20}"
    title=$(head -1 "$f" | sed 's/^# //')
    
    # Simple content processing - just convert basic markdown
    content=$(tail -n +3 "$f" | sed '
        s/^$/<p>/
        s/^## \(.*\)/<h2>\1<\/h2>/
        s/^\*\*\([^*]*\)\*\*:/<strong>\1:<\/strong>/
        s/\*\*\([^*]*\)\*\*/<strong>\1<\/strong>/g
        s/`\([^`]*\)`/<code>\1<\/code>/g
        s/^- /<p>• /
        /^```/,/^```/ {
            s/^```.*/<pre><code>/
            s/^```$/<\/code><\/pre>/
            /^```/d
        }
        s/^[^<#*`-]/<p>&/
    ')
    
    cat > "public/p/$i.html" << EOF
<!DOCTYPE html><title>$title</title>
<style>
body{max-width:40em;margin:2em auto;padding:0 1em;font-family:system-ui,-apple-system,BlinkMacSystemFont,sans-serif;line-height:1.6;color:#333}
a{color:#06c;text-decoration:none}
a:hover{text-decoration:underline}
h1{font-size:1.8em;margin-bottom:0.5em}
h2{font-size:1.3em;margin:2em 0 1em;color:#222}
p{margin-bottom:1em}
small{color:#666;display:block;margin-bottom:1em}
pre{background:#f8f8f8;padding:1em;margin:1.5em 0;border-radius:4px;overflow-x:auto;font-size:0.9em}
code{font-family:Consolas,Monaco,monospace}
pre code{display:block;white-space:pre}
p code{background:#f0f0f0;padding:0.2em 0.4em;border-radius:3px;font-size:0.9em}
strong{font-weight:600}
.nav{margin:1.5em 0;padding:0.5em 0;border-bottom:1px solid #eee}
</style>
<div class=nav><a href="../">← Blog</a></div>
<h1>$title</h1>
<small>$short_date</small>
$content
<div class=nav><a href="../">← Back to Blog</a></div>
EOF
    
    echo "Generated post $i: $title"
    ((i++))
done

# Generate main index (unchanged)
{
    echo '<!DOCTYPE html><title>My Blog</title><style>body{max-width:40em;margin:2em auto;padding:0 1em;font-family:system-ui,-apple-system,BlinkMacSystemFont,sans-serif;line-height:1.6;color:#333}input{width:100%;margin-bottom:1em}small{color:#666;display:block;margin:0}h2{margin:0}a{color:#06c}.post{margin-bottom:2em}</style><h1>My Blog</h1><input id=s placeholder="Search posts..." onkeyup="f()"><div id=p>'
    
    i=1
    for f in content/*.md; do
        [ -f "$f" ] || continue
        filename=$(basename "$f")
        date_part=$(echo "$filename" | cut -d- -f1-3)
        year=$(echo "$date_part" | cut -d- -f1)
        month=$(echo "$date_part" | cut -d- -f2)
        day=$(echo "$date_part" | cut -d- -f3)
        month=${month#0}
        day=${day#0}
        short_date="$month/$day/${year#20}"
        title=$(head -1 "$f" | sed 's/^# //')
        excerpt=$(sed -n '3p' "$f")
        echo "<div class=post><small>$short_date</small><h2><a href=\"p/$i.html\">$title</a></h2>$excerpt</div>"
        ((i++))
    done
    
    echo '</div><script>let o,posts;function f(){let q=s.value.toLowerCase(),d=p;if(!o){o=d.innerHTML;posts=Array.from(d.children);}if(!q){d.innerHTML=o;return}let filtered=posts.filter(post=>post.textContent.toLowerCase().includes(q));d.innerHTML="";filtered.forEach(post=>d.appendChild(post.cloneNode(true)));if(!filtered.length)d.innerHTML="<p>No posts found"}</script>'
} > public/index.html

post_count=$(ls content/*.md 2>/dev/null | wc -l)
echo "Built $post_count posts successfully!"
